services:
  influxdb:
    image: influxdb:2.7
    container_name: ecotwin-influx
    ports: [ "${INFLUX_PORT}:8086" ]
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUX_INIT_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUX_INIT_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUX_INIT_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUX_INIT_BUCKET}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUX_INIT_ADMIN_TOKEN}
    volumes:
      - ./influxdb/data:/var/lib/influxdb2
      - ./influxdb/config:/etc/influxdb2
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:11.1.0
    container_name: ecotwin-grafana
    depends_on: [ influxdb ]
    ports: [ "${GRAFANA_PORT}:3000" ]
    environment:
      # --- embed + anonyme ---
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_NAME: ${GRAFANA_ANON_ORG}
      GF_AUTH_ANONYMOUS_ORG_ROLE: Viewer
      # GF_SECURITY_COOKIE_SAMESITE: none
      # --- admin + th√®me ---
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_USERS_DEFAULT_THEME: light
      # --- pour provisioning datasource Influx ---
      INFLUX_INIT_ORG: ${INFLUX_INIT_ORG}
      INFLUX_INIT_BUCKET: ${INFLUX_INIT_BUCKET}
      INFLUX_INIT_ADMIN_TOKEN: ${INFLUX_INIT_ADMIN_TOKEN}
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    restart: unless-stopped

  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    container_name: ecotwin-api
    depends_on: [ influxdb ]
    environment:
      API_HOST: ${API_HOST}
      API_PORT: ${API_PORT}
      API_KEY: ${API_KEY}
      INFLUX_URL: http://ecotwin-influx:8086
      INFLUX_TOKEN: ${INFLUX_INIT_ADMIN_TOKEN}
      INFLUX_ORG: ${INFLUX_INIT_ORG}
      INFLUX_BUCKET: ${INFLUX_INIT_BUCKET}
    ports: [ "${API_PORT}:8000" ]
    restart: unless-stopped
